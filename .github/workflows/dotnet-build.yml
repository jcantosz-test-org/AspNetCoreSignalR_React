name: Build DotNet core project

on:
  push:
    branches: ["master"]

env:
  AZURE_FUNCTIONAPP_NAME: 'AspNetCoreSignalR_React'   # set this to your function app name on Azure
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.'       # set this to the path to your function app project, defaults to the repository root
  DOTNET_VERSION: '3.1.x'                   # set this to the dotnet version to use (e.g. '2.1.x', '3.1.x', '5.0.x')

permissions:
  contents: read
  packages: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v3

    - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: dotnet format
      run: |
        dotnet format --verbosity diag --report report.json
        cat report.json

    - name: dotnet format on csproj directly
      run: |
        dotnet format --verbosity diag --report  csproj-report.json AspNetCoreSignalR_React.Server/AspNetCoreSignalR_React.Server.csproj
        cat csproj-report.json

    - name: 'Build Project Dotnet'
      run: |
        dotnet build --configuration Release --output ./output

    - name: 'Package Project Dotnet'
      run: |
        dotnet pack --configuration Release --output ./pack

    - name: upload package
      run: |
        echo "Authenticate Nuget"
        dotnet nuget add source --username "jcantosz-test-org" --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/jcantosz-test-org/index.json"
        echo "Push package"
        dotnet nuget push "pack/AspNetCoreSignalR_React.Server.1.0.0.nupkg" --source "github" --skip-duplicate

    - name: upload build
      uses: actions/upload-artifact@v4
      with:
        name: build
        path: ./output
   
    - name: upload report
      if: ${{ always() }}
      uses: actions/upload-artifact@v4
      with:
        name: report
        path: report.json
